# Copyright (c) 2022, Prevas A/S
# SPDX-License-Identifier: Apache-2.0

description: NXP S32 QDEC

compatible: "nxp,qdec-s32k"

include: [pinctrl-device.yaml, sensor-device.yaml]

properties:
  counts-per-revolution:
    type: int
    description: |
      This is a number that is used to determine how many revolutions
      were done based on the current counter's value.

  motor-to-gearbox-ratio:
    type: int
    description: |
      This is the ratio between the motor and the gearbox.

  emios-channels:
    type: array
    description: |
      This is the array containing emios channel numbers used by the qdec.

  trgmux_inst:
    type: int
    description: |
      This gives the hardware instance of TRGMUX module.

  lcu_inst:
    type: int
    description: |
      This gives the hardware instance of LCU module.

  emios_inst:
    type: int
    description: |
      This gives the hardware instance of eMIOS module.

  encoder-pulses:
    type: int
    description: |
      This gives the Quadrature Encoder Phase A and B Pulses per revolution.

  single-phase-mode:
    type: boolean
    description: |
      Bypass the quadrature decoder. A positive transition of the PHASEA input
      generates a count signal. The PHASEB input and the REV bit control the
      counter direction.

  filter-count:
    type: int
    enum: [0, 1, 2, 3, 4, 5, 6, 7]
    description: |
      The number of consecutive samples that must agree prior to the input
      filter accepting an input transition. A value of 0 represents 3
      samples. A value of 7 represents 10 samples.

  filter-sample-period:
    type: int
    description: |
      The sampling period (in IPBus clock cycles) of the decoder input signals.
      Each input is sampled multiple times at the rate specified by the Filter
      Sample Period. If FILT_PER is 0 (default), then the input filter is
      bypassed. Bypassing the digital filter enables the position/position
      difference counters to operate with count rates up to the IPBus
      frequency. Turning on the input filter introduces a latency of:
      ((FILT_CNT + 3) * FILT_PER) FILT clock cycles + 2 IPBus clock periods.
